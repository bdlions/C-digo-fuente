package org.codigo;

import java.io.*;

/**
 * Created with IntelliJ IDEA.
 * User: poorna
 * Date: 22/6/14
 * Time: 6:16 PM
 * To change this template use File | Settings | File Templates.
 */
public class Test {

    public static void main(String[] args) {
        String content = "<?xml version=\"1.0\" encoding=\"utf-8\" ?><xs:schema id=\"fetch\" elementFormDefault=\"qualified\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\"\txmlns:mstns=\"http://tempuri.org/fetch/unique\">\t<xs:annotation>\t\t<xs:documentation>Schema name: fetch-schema</xs:documentation>\t</xs:annotation>\t<!--\t\t\tcondition element - used for capturing entity and link-entity\t\t\t\t\t\t\t\"where\" clause criteria\t\t\t-->\t<!-- [XDR-XSD] \"value\" element  -->\t<xs:element name=\"value\" type=\"xs:string\"></xs:element>\t<!-- [XDR-XSD] \"condition\" element  -->\t<xs:element name=\"condition\">\t\t<xs:complexType>\t\t\t<xs:choice minOccurs=\"0\" maxOccurs=\"unbounded\">\t\t\t\t<!-- -->\t\t\t\t<!--\t\tThe attribute \"value\" is used for all operators that compare to a single value (for example, eq).\t\tThe element \"value\" is used for operators that compare to multiple values (for example, in).\t\tSome operators require neither the attribute \"value\" or the element \"value\" (for example, null).\t-->\t\t\t\t<xs:element name=\"value\" minOccurs=\"0\" maxOccurs=\"unbounded\">\t\t\t\t\t<xs:complexType>\t\t\t\t\t\t<xs:simpleContent>\t\t\t\t\t\t\t<xs:extension base=\"xs:string\">\t\t\t\t\t\t\t\t<xs:attribute name=\"uiname\" type=\"xs:string\" />\t\t\t\t\t\t\t\t<xs:attribute name=\"uitype\" type=\"xs:string\" />\t\t\t\t\t\t\t</xs:extension>\t\t\t\t\t\t</xs:simpleContent>\t\t\t\t\t</xs:complexType>\t\t\t\t</xs:element>\t\t\t</xs:choice>\t\t\t<!-- -->\t\t\t<xs:attribute name=\"column\" type=\"xs:string\" />\t\t\t<xs:attribute name=\"attribute\" type=\"xs:string\"></xs:attribute>\t\t\t<xs:attribute name=\"operator\" use=\"required\" type=\"operator\"></xs:attribute>\t\t\t<!--\t\tThe attribute \"value\" is used for all operators that compare to a single value (for example, eq).\t\tThe element \"value\" is used for operators that compare to multiple values (for example, in).\t\tSome operators require neither the attribute \"value\" or the element \"value\" (for example, null).\t-->\t\t\t<xs:attribute name=\"value\" type=\"xs:string\"></xs:attribute>      <xs:attribute name=\"aggregate\" type=\"AggregateType\"></xs:attribute>      <xs:attribute name=\"alias\" type=\"xs:string\"></xs:attribute>\t\t\t<xs:attribute name=\"uiname\" />\t\t\t<xs:attribute name=\"uitype\" />\t\t\t<xs:attribute name=\"uihidden\" type=\"TrueFalse01Type\" />\t\t</xs:complexType>\t</xs:element>\t<!--\t\t\tfilter element - used for constructing complex conditionals\t\t\t\t\t\t legal on entity and link-entity\t\t\t-->\t<!-- [XDR-XSD] \"filter\" element  -->\t<xs:element name=\"filter\">\t\t<xs:complexType>\t\t\t<xs:choice minOccurs=\"0\" maxOccurs=\"unbounded\">\t\t\t\t<!-- -->\t\t\t\t<xs:element ref=\"condition\" minOccurs=\"0\" maxOccurs=\"500\" />\t\t\t\t<xs:element ref=\"filter\" minOccurs=\"0\" maxOccurs=\"unbounded\" />\t\t\t</xs:choice>\t\t\t<!-- -->\t\t\t<xs:attribute name=\"type\" default=\"and\">\t\t\t\t<xs:simpleType>\t\t\t\t\t<xs:restriction base=\"xs:NMTOKEN\">\t\t\t\t\t\t<xs:enumeration value=\"and\" />\t\t\t\t\t\t<xs:enumeration value=\"or\" />\t\t\t\t\t</xs:restriction>\t\t\t\t</xs:simpleType>\t\t\t</xs:attribute>\t\t\t<xs:attribute name=\"isquickfindfields\" type=\"xs:boolean\" />\t\t</xs:complexType>\t</xs:element>\t<!--\t\t\tattribute elements - used for selecting attributes from the\t\t\t\t\t\t\t surrounding entity / link-entity, these\t\t\t\t\t\t\t values are returned as part of the fetch\t\t\t-->\t<!-- [XDR-XSD] \"all-attributes\" element  -->\t<xs:element name=\"all-attributes\">\t\t<xs:complexType></xs:complexType>\t</xs:element>\t<!-- [XDR-XSD] \"attribute\" element  -->\t<xs:complexType name=\"FetchAttributeType\">\t\t<xs:attribute name=\"name\" use=\"required\" type=\"xs:string\"></xs:attribute>\t\t<xs:attribute name=\"build\" type=\"build\"></xs:attribute>\t\t<xs:attribute name=\"addedby\" type=\"xs:string\" />    <xs:attribute name=\"alias\" type=\"xs:string\"></xs:attribute>    <xs:attribute name=\"aggregate\" type=\"AggregateType\"></xs:attribute>    <xs:attribute name=\"groupby\" type=\"FetchBoolType\"></xs:attribute>    <xs:attribute name=\"dategrouping\" type=\"DateGroupingType\"></xs:attribute>    <xs:attribute name=\"usertimezone\" type=\"FetchBoolType\"></xs:attribute>  </xs:complexType>\t<!--\t\torder element - used to specify a sort order\t-->\t<!-- [XDR-XSD] \"order\" element  -->\t<xs:complexType name=\"FetchOrderType\">\t\t<xs:choice minOccurs=\"0\" maxOccurs=\"unbounded\">\t\t\t<!-- -->\t\t</xs:choice>\t\t<!-- -->\t\t<xs:attribute name=\"attribute\" type=\"xs:string\"></xs:attribute>    <xs:attribute name=\"alias\" type=\"xs:string\"></xs:attribute>    <xs:attribute name=\"descending\" default=\"false\" type=\"xs:boolean\"></xs:attribute>\t</xs:complexType>\t<!--\t\t\tlink-entity element - used for joining one entity to its \"parent\"\t\t\t-->\t<!-- [XDR-XSD] \"link-entity\" element  -->\t<xs:complexType name=\"FetchLinkEntityType\">\t\t<xs:choice minOccurs=\"0\" maxOccurs=\"unbounded\">\t\t\t<!-- -->\t\t\t<xs:element ref=\"all-attributes\" minOccurs=\"0\" />\t\t\t<xs:element name=\"attribute\" type=\"FetchAttributeType\" minOccurs=\"0\" maxOccurs=\"unbounded\" />\t\t\t<xs:element name=\"order\" type=\"FetchOrderType\" minOccurs=\"0\" maxOccurs=\"1\" />\t\t\t<xs:element ref=\"filter\" minOccurs=\"0\" />\t\t\t<xs:element name=\"link-entity\" type=\"FetchLinkEntityType\" />\t\t</xs:choice>\t\t<!-- -->\t\t<xs:attribute name=\"name\" use=\"required\" type=\"xs:string\"></xs:attribute>\t\t<xs:attribute name=\"to\" type=\"xs:string\"></xs:attribute>\t\t<xs:attribute name=\"from\" type=\"xs:string\"></xs:attribute>\t\t<xs:attribute name=\"alias\" type=\"xs:string\"></xs:attribute>\t\t<xs:attribute name=\"link-type\" type=\"xs:string\"></xs:attribute>\t\t<xs:attribute name=\"visible\" type=\"xs:boolean\"></xs:attribute>\t\t<xs:attribute name=\"intersect\" type=\"xs:boolean\"></xs:attribute>\t</xs:complexType>\t<!--\t\t\tentity element - used for specifying the root element for a fetch, only\t\t\t\t\t\t one root entity is allowed in a given fetch, all others\t\t\t\t\t\t are dependent on this entity and are marked as\t\t\t\t\t\t link-entity\t\t\t-->\t<!-- [XDR-XSD] \"entity\" element  -->\t<xs:complexType name=\"FetchEntityType\">\t\t<xs:choice minOccurs=\"0\" maxOccurs=\"unbounded\">\t\t\t<!-- -->\t\t\t<xs:element ref=\"all-attributes\" minOccurs=\"0\" />\t\t\t<xs:element name=\"attribute\" type=\"FetchAttributeType\" minOccurs=\"0\" maxOccurs=\"unbounded\" />\t\t\t<xs:element name=\"order\" type=\"FetchOrderType\" minOccurs=\"0\" maxOccurs=\"unbounded\" />\t\t\t<xs:element name=\"link-entity\" type=\"FetchLinkEntityType\" />\t\t\t<xs:element ref=\"filter\" minOccurs=\"0\" />\t\t</xs:choice>\t\t<!-- -->\t\t<xs:attribute name=\"name\" use=\"required\" type=\"xs:string\"></xs:attribute>\t</xs:complexType>\t<!--\t\t\tfetch element - root element for the query\t\t\t-->\t<!-- [XDR-XSD] \"fetch\" element  -->\t<xs:element name=\"fetch\" type=\"FetchType\"/>\t<xs:complexType name=\"FetchType\">\t\t<xs:choice minOccurs=\"0\" maxOccurs=\"unbounded\">\t\t\t<!-- -->\t\t\t<xs:element name=\"entity\" type=\"FetchEntityType\" />\t\t\t<!-- This is for the Reports view only -->\t\t\t<xs:element name=\"order\" type=\"FetchOrderType\" minOccurs=\"1\" maxOccurs=\"1\" />\t\t</xs:choice>\t\t<!-- -->\t\t<xs:attribute name=\"version\"/>\t\t<xs:attribute name=\"count\" type=\"xs:integer\"/>\t\t<xs:attribute name=\"page\" type=\"xs:integer\"/>\t\t<xs:attribute name=\"paging-cookie\" type=\"xs:string\"/>\t\t<xs:attribute name=\"utc-offset\" type=\"IntOrEmpty\"/>\t\t<xs:attribute name=\"aggregate\" type=\"xs:boolean\"/>\t\t<xs:attribute name=\"distinct\" type=\"xs:boolean\"/>    <xs:attribute name=\"top\" type=\"xs:integer\"/>    <xs:attribute name=\"mapping\">\t\t\t<xs:simpleType>\t\t\t\t<xs:restriction base=\"xs:NMTOKEN\">\t\t\t\t\t<xs:enumeration value=\"internal\" />\t\t\t\t\t<xs:enumeration value=\"logical\" />\t\t\t\t</xs:restriction>\t\t\t</xs:simpleType>\t\t</xs:attribute>\t\t<xs:attribute name=\"min-active-row-version\" type=\"xs:boolean\" use=\"optional\" default=\"false\"/>\t\t<xs:attribute name=\"output-format\">\t\t\t<xs:simpleType>\t\t\t\t<xs:restriction base=\"xs:NMTOKEN\">\t\t\t\t\t<xs:enumeration value=\"xml-ado\" />\t\t\t\t\t<xs:enumeration value=\"xml-auto\" />\t\t\t\t\t<xs:enumeration value=\"xml-elements\" />\t\t\t\t\t<xs:enumeration value=\"xml-raw\" />\t\t\t\t\t<xs:enumeration value=\"xml-platform\" />\t\t\t\t</xs:restriction>\t\t\t</xs:simpleType>\t\t</xs:attribute>\t\t<xs:attribute name=\"returntotalrecordcount\" type=\"xs:boolean\" use=\"optional\" default=\"false\" />\t\t<xs:attribute name=\"no-lock\" type=\"xs:boolean\" use=\"optional\" default=\"false\" />\t</xs:complexType>\t<!-- [XDR-XSD] XDR datatype derivations -->\t<xs:element name=\"savedquery\">\t\t<xs:complexType>\t\t\t<xs:all>\t\t\t\t<xs:element name=\"name\" type=\"xs:string\" minOccurs=\"1\" maxOccurs=\"1\" />\t\t\t\t<xs:element name=\"savedqueryid\" type=\"guid\" minOccurs=\"1\" maxOccurs=\"1\" />\t\t\t\t<xs:element name=\"returnedtypecode\" type=\"SerializedInteger\" minOccurs=\"1\" maxOccurs=\"1\" />\t\t\t\t<xs:element name=\"description\" type=\"xs:string\" minOccurs=\"0\" maxOccurs=\"1\" />\t\t\t\t<xs:element name=\"querytype\" type=\"SerializedInteger\" minOccurs=\"1\" maxOccurs=\"1\" />\t\t\t\t<xs:element name=\"IsCustomizable\" type=\"SerializedTrueFalse01Type\" minOccurs=\"0\" maxOccurs=\"1\" />\t\t\t\t<xs:element name=\"CanBeDeleted\" type=\"SerializedTrueFalse01Type\" minOccurs=\"0\" maxOccurs=\"1\" />\t\t\t\t<xs:element name=\"isquickfindquery\" type=\"SerializedTrueFalse01Type\" minOccurs=\"0\" maxOccurs=\"1\" />\t\t\t\t<xs:element name=\"isuserdefined\" type=\"SerializedTrueFalse01Type\" minOccurs=\"0\" maxOccurs=\"1\" />\t\t\t\t<xs:element name=\"isdefault\" type=\"SerializedTrueFalse01Type\" minOccurs=\"0\" maxOccurs=\"1\" />\t\t\t\t<xs:element name=\"isprivate\" type=\"xs:boolean\" minOccurs=\"0\" maxOccurs=\"1\" />\t\t\t\t<xs:element name=\"queryapi\" type=\"xs:string\" minOccurs=\"0\" maxOccurs=\"1\" />\t\t\t\t<xs:element name=\"fetchxml\" minOccurs=\"0\" maxOccurs=\"1\">\t\t\t\t\t<xs:complexType>\t\t\t\t\t\t<xs:sequence>\t\t\t\t\t\t\t<xs:element ref=\"fetch\" minOccurs=\"0\" maxOccurs=\"1\" />\t\t\t\t\t\t</xs:sequence>\t\t\t\t\t</xs:complexType>\t\t\t\t</xs:element>\t\t\t\t<xs:element name=\"columnsetxml\" minOccurs=\"1\" maxOccurs=\"1\">\t\t\t\t\t<xs:complexType>\t\t\t\t\t\t<xs:sequence>\t\t\t\t\t\t\t<xs:element name=\"columnset\" minOccurs=\"0\" maxOccurs=\"1\">\t\t\t\t\t\t\t\t<xs:complexType>\t\t\t\t\t\t\t\t\t<xs:choice minOccurs=\"0\" maxOccurs=\"unbounded\">\t\t\t\t\t\t\t\t\t\t<!-- Because <column> contains text and one attribute we cannot specify its type. We have to define it as a complexType with a simple content. -->\t\t\t\t\t\t\t\t\t\t<xs:element name=\"column\" minOccurs=\"0\" maxOccurs=\"1\">\t\t\t\t\t\t\t\t\t\t\t<xs:complexType>\t\t\t\t\t\t\t\t\t\t\t\t<xs:simpleContent>\t\t\t\t\t\t\t\t\t\t\t\t\t<xs:extension base=\"xs:string\">\t\t\t\t\t\t\t\t\t\t\t\t\t\t<xs:attribute name=\"build\" type=\"build\" />\t\t\t\t\t\t\t\t\t\t\t\t\t\t<xs:attribute name=\"addedby\" type=\"xs:string\" />\t\t\t\t\t\t\t\t\t\t\t\t\t</xs:extension>\t\t\t\t\t\t\t\t\t\t\t\t</xs:simpleContent>\t\t\t\t\t\t\t\t\t\t\t</xs:complexType>\t\t\t\t\t\t\t\t\t\t</xs:element>\t\t\t\t\t\t\t\t\t\t<xs:choice>\t\t\t\t\t\t\t\t\t\t\t<xs:element name=\"ascend\" minOccurs=\"0\" maxOccurs=\"1\" />\t\t\t\t\t\t\t\t\t\t\t<xs:element name=\"descend\" minOccurs=\"0\" maxOccurs=\"1\" />\t\t\t\t\t\t\t\t\t\t</xs:choice>\t\t\t\t\t\t\t\t\t\t<xs:element name=\"filter\" minOccurs=\"0\" maxOccurs=\"1\">\t\t\t\t\t\t\t\t\t\t\t<!-- Allow support for v1.5 format -->\t\t\t\t\t\t\t\t\t\t\t<xs:complexType>\t\t\t\t\t\t\t\t\t\t\t\t<xs:sequence>\t\t\t\t\t\t\t\t\t\t\t\t\t<xs:element name=\"condition\" minOccurs=\"1\" maxOccurs=\"500\">\t\t\t\t\t\t\t\t\t\t\t\t\t\t<xs:complexType>\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<xs:attribute name=\"column\" type=\"xs:string\" use=\"required\" />\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<xs:attribute name=\"operator\" type=\"operator\" use=\"optional\" />\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<xs:attribute name=\"value\" type=\"xs:string\" use=\"optional\"/>\t\t\t\t\t\t\t\t\t\t\t\t\t\t</xs:complexType>\t\t\t\t\t\t\t\t\t\t\t\t\t</xs:element>\t\t\t\t\t\t\t\t\t\t\t\t</xs:sequence>\t\t\t\t\t\t\t\t\t\t\t\t<xs:attribute name=\"column\" type=\"xs:string\" use=\"optional\" />\t\t\t\t\t\t\t\t\t\t\t\t<xs:attribute name=\"operator\" type=\"operator\" use=\"optional\" />\t\t\t\t\t\t\t\t\t\t\t\t<xs:attribute name=\"value\" type=\"xs:string\" use=\"optional\"/>\t\t\t\t\t\t\t\t\t\t\t\t<xs:attribute name=\"type\" type=\"xs:string\" use=\"optional\"/>\t\t\t\t\t\t\t\t\t\t\t</xs:complexType>\t\t\t\t\t\t\t\t\t\t</xs:element>\t\t\t\t\t\t\t\t\t</xs:choice>\t\t\t\t\t\t\t\t\t<xs:attribute name=\"version\"></xs:attribute>\t\t\t\t\t\t\t\t\t<xs:attribute name=\"distinct\" type=\"xs:boolean\"/>\t\t\t\t\t\t\t\t</xs:complexType>\t\t\t\t\t\t\t</xs:element>\t\t\t\t\t\t</xs:sequence>\t\t\t\t\t</xs:complexType>\t\t\t\t</xs:element>\t\t\t\t<xs:element name=\"layoutxml\" minOccurs=\"0\" maxOccurs=\"1\">\t\t\t\t\t<xs:complexType>\t\t\t\t\t\t<xs:sequence>\t\t\t\t\t\t\t<xs:element name=\"grid\" minOccurs=\"0\" maxOccurs=\"1\">\t\t\t\t\t\t\t\t<xs:complexType>\t\t\t\t\t\t\t\t\t<xs:sequence>\t\t\t\t\t\t\t\t\t\t<xs:element name=\"row\" minOccurs=\"1\" maxOccurs=\"1\">\t\t\t\t\t\t\t\t\t\t\t<xs:complexType>\t\t\t\t\t\t\t\t\t\t\t\t<xs:sequence>\t\t\t\t\t\t\t\t\t\t\t\t\t<xs:element name=\"cell\" minOccurs=\"1\" maxOccurs=\"unbounded\">\t\t\t\t\t\t\t\t\t\t\t\t\t\t<xs:complexType>\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<xs:sequence></xs:sequence>\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<xs:attribute name=\"name\" type=\"xs:string\" use=\"required\" />\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<xs:attribute name=\"width\" type=\"xs:integer\" use=\"optional\" />\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<xs:attribute name=\"LabelId\" type=\"xs:string\" use=\"optional\" />\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<xs:attribute name=\"label\" type=\"xs:string\" use=\"optional\" />\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<xs:attribute name=\"desc\" type=\"xs:string\" use=\"optional\" />\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<xs:attribute name=\"ishidden\" type=\"xs:integer\" use=\"optional\" />\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<xs:attribute name=\"disableSorting\" type=\"xs:integer\" use=\"optional\" />\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<xs:attribute name=\"disableMetaDataBinding\" type=\"xs:integer\" use=\"optional\" />\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<xs:attribute name=\"cellType\" type =\"xs:string\" />\t\t\t\t\t\t\t\t\t\t\t\t\t\t</xs:complexType>\t\t\t\t\t\t\t\t\t\t\t\t\t</xs:element>\t\t\t\t\t\t\t\t\t\t\t\t</xs:sequence>\t\t\t\t\t\t\t\t\t\t\t\t<xs:attribute name=\"name\" type=\"xs:string\" use=\"required\" />\t\t\t\t\t\t\t\t\t\t\t\t<xs:attribute name=\"id\" type=\"xs:string\" use=\"required\" />\t\t\t\t\t\t\t\t\t\t\t\t<xs:attribute name=\"multiobjectidfield\" type=\"xs:string\" />\t\t\t\t\t\t\t\t\t\t\t\t<xs:attribute name=\"layoutstyle\" type=\"xs:string\" />\t\t\t\t\t\t\t\t\t\t\t</xs:complexType>\t\t\t\t\t\t\t\t\t\t</xs:element>\t\t\t\t\t\t\t\t\t</xs:sequence>\t\t\t\t\t\t\t\t\t<xs:attribute name=\"name\" type=\"xs:string\" use=\"required\" />\t\t\t\t\t\t\t\t\t<xs:attribute name=\"select\" type=\"xs:boolean\" use=\"required\" />\t\t\t\t\t\t\t\t\t<xs:attribute name=\"preview\" type=\"BoolOrEmpty\" use=\"required\" />\t\t\t\t\t\t\t\t\t<xs:attribute name=\"icon\" type=\"BoolOrEmpty\" use=\"required\" />\t\t\t\t\t\t\t\t\t<xs:attribute name=\"jump\" type=\"xs:string\" use=\"optional\" />\t\t\t\t\t\t\t\t\t<xs:attribute name=\"object\" type=\"xs:integer\" use=\"required\" />\t\t\t\t\t\t\t\t\t<xs:attribute name=\"disableInlineEditing\" type=\"xs:integer\" use=\"optional\" />\t\t\t\t\t\t\t\t\t<xs:attribute name=\"iconrenderer\" type=\"xs:string\" />\t\t\t\t\t\t\t\t\t<xs:attribute name=\"multilinerows\" type=\"BoolOrEmpty\" use=\"optional\" />\t\t\t\t\t\t\t\t</xs:complexType>\t\t\t\t\t\t\t</xs:element>\t\t\t\t\t\t</xs:sequence>\t\t\t\t\t</xs:complexType>\t\t\t\t</xs:element>\t\t\t</xs:all>\t\t\t<xs:attribute name=\"donotuseinLCID\" type=\"xs:string\" use=\"optional\" />\t\t\t<xs:attribute name=\"useinLCID\" type=\"xs:string\" use=\"optional\" />\t\t</xs:complexType>\t</xs:element>\t<xs:complexType name=\"SerializedInteger\">\t\t<xs:simpleContent>\t\t\t<xs:extension base=\"xs:nonNegativeInteger\">\t\t\t\t<xs:attribute name=\"formattedvalue\" type=\"xs:string\" />\t\t\t</xs:extension>\t\t</xs:simpleContent>\t</xs:complexType>\t<xs:simpleType name=\"build\">\t\t<xs:restriction base=\"xs:string\">\t\t\t<xs:enumeration value=\"1.504021\" />\t\t\t<xs:enumeration value=\"1.003017\" />\t\t</xs:restriction>\t</xs:simpleType>\t<xs:simpleType name=\"operator\">                <xs:restriction base=\"xs:NMTOKEN\">                  <xs:enumeration value=\"eq\" />                  <xs:enumeration value=\"neq\" />                  <xs:enumeration value=\"ne\" />                  <xs:enumeration value=\"gt\" />                  <xs:enumeration value=\"ge\" />                  <xs:enumeration value=\"le\" />                  <xs:enumeration value=\"lt\" />                  <xs:enumeration value=\"like\" />                  <xs:enumeration value=\"not-like\" />                  <xs:enumeration value=\"in\" />                  <xs:enumeration value=\"not-in\" />                  <xs:enumeration value=\"between\" />                  <xs:enumeration value=\"not-between\" />                  <xs:enumeration value=\"null\" />                  <xs:enumeration value=\"not-null\" />                  <xs:enumeration value=\"yesterday\" />                  <xs:enumeration value=\"today\" />                  <xs:enumeration value=\"tomorrow\" />                  <xs:enumeration value=\"last-seven-days\" />                  <xs:enumeration value=\"next-seven-days\" />                  <xs:enumeration value=\"last-week\" />                  <xs:enumeration value=\"this-week\" />                  <xs:enumeration value=\"next-week\" />                  <xs:enumeration value=\"last-month\" />                  <xs:enumeration value=\"this-month\" />                  <xs:enumeration value=\"next-month\" />                  <xs:enumeration value=\"on\" />                  <xs:enumeration value=\"on-or-before\" />                  <xs:enumeration value=\"on-or-after\" />                  <xs:enumeration value=\"last-year\" />                  <xs:enumeration value=\"this-year\" />                  <xs:enumeration value=\"next-year\" />                  <xs:enumeration value=\"last-x-hours\" />                  <xs:enumeration value=\"next-x-hours\" />                  <xs:enumeration value=\"last-x-days\" />                  <xs:enumeration value=\"next-x-days\" />                  <xs:enumeration value=\"last-x-weeks\" />                  <xs:enumeration value=\"next-x-weeks\" />                  <xs:enumeration value=\"last-x-months\" />                  <xs:enumeration value=\"next-x-months\" />                  <xs:enumeration value=\"olderthan-x-months\" />                  <xs:enumeration value=\"last-x-years\" />                  <xs:enumeration value=\"next-x-years\" />                  <xs:enumeration value=\"eq-userid\" />                  <xs:enumeration value=\"ne-userid\" />                  <xs:enumeration value=\"eq-userteams\" />                  <xs:enumeration value=\"eq-businessid\" />                  <xs:enumeration value=\"ne-businessid\" />                  <xs:enumeration value=\"eq-userlanguage\" />                  <xs:enumeration value=\"this-fiscal-year\" />                  <xs:enumeration value=\"this-fiscal-period\" />                  <xs:enumeration value=\"next-fiscal-year\" />                  <xs:enumeration value=\"next-fiscal-period\" />                  <xs:enumeration value=\"last-fiscal-year\" />                  <xs:enumeration value=\"last-fiscal-period\" />                  <xs:enumeration value=\"last-x-fiscal-years\" />                  <xs:enumeration value=\"last-x-fiscal-periods\" />                  <xs:enumeration value=\"next-x-fiscal-years\" />                  <xs:enumeration value=\"next-x-fiscal-periods\" />                  <xs:enumeration value=\"in-fiscal-year\" />                  <xs:enumeration value=\"in-fiscal-period\" />                  <xs:enumeration value=\"in-fiscal-period-and-year\" />                  <xs:enumeration value=\"in-or-before-fiscal-period-and-year\" />                  <xs:enumeration value=\"in-or-after-fiscal-period-and-year\" />                  <xs:enumeration value=\"begins-with\" />                  <xs:enumeration value=\"not-begin-with\" />                  <xs:enumeration value=\"ends-with\" />                  <xs:enumeration value=\"not-end-with\" />                </xs:restriction>\t</xs:simpleType>\t<xs:simpleType name=\"guid\">\t\t<xs:restriction base=\"xs:string\">\t\t\t<xs:pattern value=\"\\{?[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}\\}?\" />\t\t</xs:restriction>\t</xs:simpleType>\t<xs:simpleType name=\"BoolOrEmpty\">\t\t<xs:union memberTypes=\"xs:boolean\">\t\t\t<xs:simpleType>\t\t\t\t<xs:restriction base=\"xs:string\">\t\t\t\t\t<xs:enumeration value=\"\" />\t\t\t\t</xs:restriction>\t\t\t</xs:simpleType>\t\t</xs:union>\t</xs:simpleType>\t<xs:simpleType name=\"IntOrEmpty\">\t\t<xs:union memberTypes=\"xs:integer\">\t\t\t<xs:simpleType>\t\t\t\t<xs:restriction base=\"xs:string\">\t\t\t\t\t<xs:enumeration value=\"\" />\t\t\t\t</xs:restriction>\t\t\t</xs:simpleType>\t\t</xs:union>\t</xs:simpleType>\t<xs:simpleType name=\"TrueFalse01Type\">\t\t<xs:restriction base=\"xs:string\">\t\t\t<xs:enumeration value=\"0\" />\t\t\t<xs:enumeration value=\"1\" />\t\t</xs:restriction>\t</xs:simpleType>  <xs:simpleType name=\"AggregateType\">    <xs:restriction base=\"xs:NMTOKEN\">      <xs:enumeration value=\"count\" />      <xs:enumeration value=\"countcolumn\" />      <xs:enumeration value=\"sum\" />      <xs:enumeration value=\"avg\" />      <xs:enumeration value=\"min\" />      <xs:enumeration value=\"max\" />    </xs:restriction>  </xs:simpleType>  <xs:simpleType name=\"DateGroupingType\">    <xs:restriction base=\"xs:NMTOKEN\">      <xs:enumeration value=\"day\" />      <xs:enumeration value=\"week\" />      <xs:enumeration value=\"month\" />      <xs:enumeration value=\"quarter\" />      <xs:enumeration value=\"year\" />      <xs:enumeration value=\"fiscal-period\" />      <xs:enumeration value=\"fiscal-year\" />    </xs:restriction>  </xs:simpleType>  <xs:simpleType name=\"FetchBoolType\">    <xs:restriction base=\"xs:NMTOKEN\">      <xs:enumeration value=\"true\" />      <xs:enumeration value=\"false\" />      <xs:enumeration value=\"1\" />      <xs:enumeration value=\"0\" />    </xs:restriction>  </xs:simpleType>  <xs:complexType name=\"SerializedTrueFalse01Type\">\t\t<xs:simpleContent>\t\t\t<xs:extension base=\"TrueFalse01Type\">\t\t\t\t<xs:attribute name=\"name\" type=\"xs:string\" />\t\t\t</xs:extension>\t\t</xs:simpleContent>\t</xs:complexType>\t<xs:complexType name=\"LocalizedNamesType\">\t\t<xs:sequence>\t\t\t<xs:element name=\"LocalizedName\" type=\"FieldXmlFieldUIType\" minOccurs=\"0\" maxOccurs=\"unbounded\" />\t\t</xs:sequence>\t</xs:complexType>\t<xs:complexType name=\"DescriptionsType\">\t\t<xs:sequence>\t\t\t<xs:element name=\"Description\" type=\"FieldXmlFieldUIType\" minOccurs=\"0\" maxOccurs=\"unbounded\" />\t\t</xs:sequence>\t</xs:complexType>\t<xs:complexType name=\"FieldXmlFieldUIType\">\t\t<xs:attribute name=\"id\" type=\"guid\" />\t\t<xs:attribute name=\"description\" use=\"required\" type=\"xs:string\" />\t\t<xs:attribute name=\"languagecode\" use=\"required\" type=\"xs:positiveInteger\" />\t</xs:complexType></xs:schema>";

        for (int i = 0; i <= Integer.MAX_VALUE; i++) {
            File t = new File("D:\\apache-activemq-5.9.1\\bin\\a\\test" + i + ".xml");
            try {
                t.createNewFile();
                FileWriter fileWriter = new FileWriter(t);
                fileWriter.write(content);
                fileWriter.flush();
                fileWriter.close();
            } catch (FileNotFoundException e) {
                e.printStackTrace();  //To change body of catch statement use File | Settings | File Templates.
            } catch (IOException e) {
                e.printStackTrace();  //To change body of catch statement use File | Settings | File Templates.
            }
            if (i == Integer.MAX_VALUE)
                i = 0;
            try {
                Thread.sleep(10000);
            } catch (InterruptedException e) {
                //
            }
        }


    }

}
